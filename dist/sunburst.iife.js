/* sunburst.js v1.0.0 | (c) SunsetWx, LLC. and other contributors | ISC License */
var SunburstJS=function(){"use strict";const e=[];"undefined"!=typeof navigator&&navigator.userAgent&&e.push(navigator.userAgent),"undefined"!=typeof process&&process.versions&&e.push(Object.keys(process.versions).map(e=>`${e}/${process.versions[e]}`).join(" ")),e.push("sunburst.js/1.0.0");const t=["predictions"],s=e.join(" ");class r extends Error{constructor(e,t){super(e),this.name="RequestError",this.statusCode=t}}var o=e=>btoa(e),n={snakeToCamel:e=>e.replace(/_[a-zA-Z]/g,e=>e.toUpperCase().replace("_","")),camelToSnake:e=>e.replace(/[A-Z]/g,e=>`_${e.toLowerCase()}`),convertCaseKeys(e,t){if(Array.isArray(e)){const s=[];for(let r=0;r<e.length;r++)null===e[r]||!Array.isArray(e[r])&&"object"!=typeof e[r]?s[r]=e[r]:s[r]=this.convertCaseKeys(e[r],t);return s}if(e&&"object"==typeof e){const s={};return Object.keys(e).forEach(r=>{const o=t(r);null!==e[r]&&"object"==typeof e[r]?s[o]=this.convertCaseKeys(e[r],t):s[o]=e[r]}),s}return e}};const a=e=>Object.keys(e).map(t=>encodeURIComponent(t)+"="+encodeURIComponent(e[t])).join("&"),i=e=>Array.isArray(e)?e.join(","):"object"==typeof e?e.coordinates.join(","):e,c=e=>(e.geo=i(e.geo),e.after=(e=>e instanceof Date?e.toISOString():"number"==typeof e?new Date(e).toISOString():e)(e.after),e);var u={params:{quality:Object.freeze({get:c,post:e=>e.map(e=>c(e))}),location:Object.freeze({get:e=>(e.geo=i(e.geo),e)})}},p=function(e){return function(){var t=e.apply(this,arguments);return new Promise(function(e,s){return function r(o,n){try{var a=t[o](n),i=a.value}catch(e){return void s(e)}if(!a.done)return Promise.resolve(i).then(function(e){r("next",e)},function(e){r("throw",e)});e(i)}("next")})}};return class{constructor(e){const r={clientId:"",clientSecret:"",expiresIn:604800,scope:t,origins:[],addresses:[],baseUrl:"https://sunburst.sunsetwx.com/v1",userAgent:s,timeout:30,clockSkewOffset:300};this._options=Object.assign({},r,e)}request(e={},t){var s=this;const{path:o,method:i="GET",headers:c={},qs:u,formData:h,body:d}=e;return new Promise((l=p(function*(p,l){try{t&&(p=t.resolve,l=t.reject);const f={"user-agent":s._options.userAgent};if(!c.authorization){const{accessToken:e}=yield s.getToken({forceRefresh:t});f.authorization=`Bearer ${e}`}const m=yield(({uri:e,timeout:t,method:s="GET",headers:r={},qs:o,formData:n,body:i})=>new Promise((c,u)=>{try{i&&(i=JSON.stringify(i),r["content-type"]="application/json; charset=utf-8"),n&&(i=a(n),r["content-type"]="application/x-www-form-urlencoded; charset=utf-8"),o&&(e=`${e}?${a(o)}`)}catch(e){return u(e)}const p=new XMLHttpRequest;p.open(s,e),Object.keys(r).forEach(e=>p.setRequestHeader(e,r[e])),p.onerror=(()=>{if(p.readyState!==XMLHttpRequest.DONE||0!==p.status)return u(new Error(p.statusText||`unknown request error: ${e}`))}),p.onabort=(()=>u(new Error(`request timeout: ${e}`))),p.onload=(()=>c({response:p.response,statusCode:p.status})),t>0&&setTimeout(()=>p.abort(),1e3*t),p.send(i)}))({method:i,uri:`${s._options.baseUrl}${o}`,headers:Object.assign({},f,c),qs:n.convertCaseKeys(u,n.camelToSnake),formData:n.convertCaseKeys(h,n.camelToSnake),body:n.convertCaseKeys(d,n.camelToSnake),timeout:s._options.timeout}),y=JSON.parse(m.response);return y.error?401!==m.statusCode||t?l(new r(y.error,m.statusCode)):s.request(e,{resolve:p,reject:l}):p(n.convertCaseKeys(y,n.snakeToCamel))}catch(e){try{if("number"!=typeof e.statusCode)return l(e);const{error:t}=JSON.parse(e.message);return l(new r(t||e.message,e.statusCode))}catch(t){return l(e)}}}),function(e,t){return l.apply(this,arguments)}));var l}createSession({email:e,password:t,passcode:s,scope:r,type:n="permanent",params:a={}}){var i,c=this;return new Promise((i=p(function*(i,u){try{const p={grant_type:"password",scope:r.join(" "),type:n,passcode:s},h=o(`${e}:${t}`),{session:d}=yield c.request({method:"POST",path:"/login",headers:{authorization:`Basic ${h}`},formData:Object.assign({},p,a)});return d.scope=d.scope.split(" "),i(d)}catch(e){return u(e)}}),function(e,t){return i.apply(this,arguments)}))}getToken({forceRefresh:e=!1}){var t,s=this;return new Promise((t=p(function*(t,r){if(!e&&s.token&&"object"==typeof s.token&&s.token.expires-1e3*s._options.clockSkewOffset-(new Date).valueOf()>0)return t({accessToken:s.token.accessToken});try{if(!s._options.clientId||!s._options.clientSecret)throw new Error("create a new instance of SunburstAPI with both clientId and clientSecret options set");const e=`${s._options.clientId}:${s._options.clientSecret}`,n=o(e),{accessToken:a,expiresIn:i}=yield s.request({method:"POST",path:"/login/session",headers:{authorization:`Basic ${n}`},formData:{grant_type:"client_credentials",expires_in:s._options.expiresIn,scope:s._options.scope.join(" "),origins:s._options.origins.join(" "),addresses:s._options.addresses.join(" ")}});return s.token={accessToken:a,expires:1e3*i+(new Date).valueOf()},t({accessToken:a})}catch(e){return r(e)}}),function(e,s){return t.apply(this,arguments)}))}logout(){var e,t=this;return new Promise((e=p(function*(e,s){try{const r=yield t.request({method:"POST",path:"/logout"});return t.token=null,e(r)}catch(e){return s(e)}}),function(t,s){return e.apply(this,arguments)}))}sessions(e={}){return this.request({path:"/account/sessions",qs:e})}deleteSessionById(e={id:""}){return this.request({method:"DELETE",path:`/account/session/${e.id}`,formData:e})}deleteSessions(e={}){return this.request({method:"DELETE",path:"/account/sessions",formData:e})}account(){return this.request({path:"/account"})}deleteAccount(e={}){return this.request({method:"DELETE",path:"/account",formData:e})}passwordReset(e={}){return this.request({method:"POST",path:"/account/password/reset",formData:e})}updateEmail(e={}){return this.request({method:"POST",path:"/account/email",formData:e})}updateMfa(e={}){return this.request({method:"POST",path:"/account/mfa",formData:e})}totpSecret(){return this.request({path:"/account/mfa/totp"})}mfa(){return this.request({path:"/account/mfa"})}coordinates(e={}){return this.request({path:"/coordinates",qs:e})}location(e={}){return this.request({path:"/location",qs:u.params.location.get(e)})}quality(e={}){return this.request({path:"/quality",qs:u.params.quality.get(e)})}batchQuality(e=[]){return this.request({method:"POST",path:"/quality",body:u.params.quality.post(e)})}}}();
